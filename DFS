DFS IS EGGE BASED TECHIQUE STACK AS A DATA STRUCTURE IS USED IN DFS.
#include<unordered_map>
#include<list>
void dfs(unordered_map< int , list<int> > &m,unordered_map <int,bool> &visited,int index, vector<int> &components){
     visited[index]=true;
     components.push_back(index);
     for(auto i: m[index])
     {
         if(!visited[i])
         {
             dfs(m,visited,i,components);
         }
     }

}
vector<vector<int>> depthFirstSearch(int V, int E, vector<vector<int>> &v)
{
    unordered_map< int , list<int> > m;    
     for(int i=0;i<E;i++)
     {
          m[v[i][0]].push_back(v[i][1]);
          m[v[i][1]].push_back(v[i][0]);
     }
     unordered_map <int,bool> visited;
     vector<vector<int>> ans;
     
     for(int i=0;i<V;i++)
     {
         if(!visited[i])
         {
             vector<int> components;
             dfs(m,visited,i,components);
             ans.push_back(components);
         }
         
     }
     return ans;
}

5 4
0 2
0 1
1 2
3 4


